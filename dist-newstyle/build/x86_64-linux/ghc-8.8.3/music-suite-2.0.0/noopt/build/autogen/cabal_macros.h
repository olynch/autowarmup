/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package music-suite-2.0.0 */
#ifndef VERSION_music_suite
#define VERSION_music_suite "2.0.0"
#endif /* VERSION_music_suite */
#ifndef MIN_VERSION_music_suite
#define MIN_VERSION_music_suite(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_music_suite */

/* package HCodecs-0.5.2 */
#ifndef VERSION_HCodecs
#define VERSION_HCodecs "0.5.2"
#endif /* VERSION_HCodecs */
#ifndef MIN_VERSION_HCodecs
#define MIN_VERSION_HCodecs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 2)
#endif /* MIN_VERSION_HCodecs */

/* package MonadRandom-0.5.1.2 */
#ifndef VERSION_MonadRandom
#define VERSION_MonadRandom "0.5.1.2"
#endif /* VERSION_MonadRandom */
#ifndef MIN_VERSION_MonadRandom
#define MIN_VERSION_MonadRandom(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 1)
#endif /* MIN_VERSION_MonadRandom */

/* package NumInstances-1.4 */
#ifndef VERSION_NumInstances
#define VERSION_NumInstances "1.4"
#endif /* VERSION_NumInstances */
#ifndef MIN_VERSION_NumInstances
#define MIN_VERSION_NumInstances(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 0)
#endif /* MIN_VERSION_NumInstances */

/* package aeson-1.4.7.1 */
#ifndef VERSION_aeson
#define VERSION_aeson "1.4.7.1"
#endif /* VERSION_aeson */
#ifndef MIN_VERSION_aeson
#define MIN_VERSION_aeson(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 7)
#endif /* MIN_VERSION_aeson */

/* package average-0.6.1 */
#ifndef VERSION_average
#define VERSION_average "0.6.1"
#endif /* VERSION_average */
#ifndef MIN_VERSION_average
#define MIN_VERSION_average(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 1)
#endif /* MIN_VERSION_average */

/* package base-4.13.0.0 */
#ifndef VERSION_base
#define VERSION_base "4.13.0.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  13 || \
  (major1) == 4 && (major2) == 13 && (minor) <= 0)
#endif /* MIN_VERSION_base */

/* package base-orphans-0.8.2 */
#ifndef VERSION_base_orphans
#define VERSION_base_orphans "0.8.2"
#endif /* VERSION_base_orphans */
#ifndef MIN_VERSION_base_orphans
#define MIN_VERSION_base_orphans(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  8 || \
  (major1) == 0 && (major2) == 8 && (minor) <= 2)
#endif /* MIN_VERSION_base_orphans */

/* package base-prelude-1.3 */
#ifndef VERSION_base_prelude
#define VERSION_base_prelude "1.3"
#endif /* VERSION_base_prelude */
#ifndef MIN_VERSION_base_prelude
#define MIN_VERSION_base_prelude(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_base_prelude */

/* package bytestring-0.10.10.0 */
#ifndef VERSION_bytestring
#define VERSION_bytestring "0.10.10.0"
#endif /* VERSION_bytestring */
#ifndef MIN_VERSION_bytestring
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 10)
#endif /* MIN_VERSION_bytestring */

/* package cassava-0.5.2.0 */
#ifndef VERSION_cassava
#define VERSION_cassava "0.5.2.0"
#endif /* VERSION_cassava */
#ifndef MIN_VERSION_cassava
#define MIN_VERSION_cassava(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 2)
#endif /* MIN_VERSION_cassava */

/* package colour-2.3.5 */
#ifndef VERSION_colour
#define VERSION_colour "2.3.5"
#endif /* VERSION_colour */
#ifndef MIN_VERSION_colour
#define MIN_VERSION_colour(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  3 || \
  (major1) == 2 && (major2) == 3 && (minor) <= 5)
#endif /* MIN_VERSION_colour */

/* package comonad-5.0.6 */
#ifndef VERSION_comonad
#define VERSION_comonad "5.0.6"
#endif /* VERSION_comonad */
#ifndef MIN_VERSION_comonad
#define MIN_VERSION_comonad(major1,major2,minor) (\
  (major1) <  5 || \
  (major1) == 5 && (major2) <  0 || \
  (major1) == 5 && (major2) == 0 && (minor) <= 6)
#endif /* MIN_VERSION_comonad */

/* package containers-0.6.2.1 */
#ifndef VERSION_containers
#define VERSION_containers "0.6.2.1"
#endif /* VERSION_containers */
#ifndef MIN_VERSION_containers
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 2)
#endif /* MIN_VERSION_containers */

/* package contravariant-1.5.2 */
#ifndef VERSION_contravariant
#define VERSION_contravariant "1.5.2"
#endif /* VERSION_contravariant */
#ifndef MIN_VERSION_contravariant
#define MIN_VERSION_contravariant(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  5 || \
  (major1) == 1 && (major2) == 5 && (minor) <= 2)
#endif /* MIN_VERSION_contravariant */

/* package data-default-0.7.1.1 */
#ifndef VERSION_data_default
#define VERSION_data_default "0.7.1.1"
#endif /* VERSION_data_default */
#ifndef MIN_VERSION_data_default
#define MIN_VERSION_data_default(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  7 || \
  (major1) == 0 && (major2) == 7 && (minor) <= 1)
#endif /* MIN_VERSION_data_default */

/* package data-interval-2.0.1 */
#ifndef VERSION_data_interval
#define VERSION_data_interval "2.0.1"
#endif /* VERSION_data_interval */
#ifndef MIN_VERSION_data_interval
#define MIN_VERSION_data_interval(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 1)
#endif /* MIN_VERSION_data_interval */

/* package directory-1.3.6.0 */
#ifndef VERSION_directory
#define VERSION_directory "1.3.6.0"
#endif /* VERSION_directory */
#ifndef MIN_VERSION_directory
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 6)
#endif /* MIN_VERSION_directory */

/* package file-embed-0.0.11.2 */
#ifndef VERSION_file_embed
#define VERSION_file_embed "0.0.11.2"
#endif /* VERSION_file_embed */
#ifndef MIN_VERSION_file_embed
#define MIN_VERSION_file_embed(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 11)
#endif /* MIN_VERSION_file_embed */

/* package filepath-1.4.2.1 */
#ifndef VERSION_filepath
#define VERSION_filepath "1.4.2.1"
#endif /* VERSION_filepath */
#ifndef MIN_VERSION_filepath
#define MIN_VERSION_filepath(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 2)
#endif /* MIN_VERSION_filepath */

/* package iso-deriving-0.0.8 */
#ifndef VERSION_iso_deriving
#define VERSION_iso_deriving "0.0.8"
#endif /* VERSION_iso_deriving */
#ifndef MIN_VERSION_iso_deriving
#define MIN_VERSION_iso_deriving(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 8)
#endif /* MIN_VERSION_iso_deriving */

/* package lens-4.19.1 */
#ifndef VERSION_lens
#define VERSION_lens "4.19.1"
#endif /* VERSION_lens */
#ifndef MIN_VERSION_lens
#define MIN_VERSION_lens(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  19 || \
  (major1) == 4 && (major2) == 19 && (minor) <= 1)
#endif /* MIN_VERSION_lens */

/* package logict-0.7.0.2 */
#ifndef VERSION_logict
#define VERSION_logict "0.7.0.2"
#endif /* VERSION_logict */
#ifndef MIN_VERSION_logict
#define MIN_VERSION_logict(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  7 || \
  (major1) == 0 && (major2) == 7 && (minor) <= 0)
#endif /* MIN_VERSION_logict */

/* package modular-arithmetic-1.2.1.5 */
#ifndef VERSION_modular_arithmetic
#define VERSION_modular_arithmetic "1.2.1.5"
#endif /* VERSION_modular_arithmetic */
#ifndef MIN_VERSION_modular_arithmetic
#define MIN_VERSION_modular_arithmetic(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_VERSION_modular_arithmetic */

/* package monadplus-1.3 */
#ifndef VERSION_monadplus
#define VERSION_monadplus "1.3"
#endif /* VERSION_monadplus */
#ifndef MIN_VERSION_monadplus
#define MIN_VERSION_monadplus(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_monadplus */

/* package mtl-2.2.2 */
#ifndef VERSION_mtl
#define VERSION_mtl "2.2.2"
#endif /* VERSION_mtl */
#ifndef MIN_VERSION_mtl
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_mtl */

/* package neat-interpolation-0.5.1 */
#ifndef VERSION_neat_interpolation
#define VERSION_neat_interpolation "0.5.1"
#endif /* VERSION_neat_interpolation */
#ifndef MIN_VERSION_neat_interpolation
#define MIN_VERSION_neat_interpolation(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 1)
#endif /* MIN_VERSION_neat_interpolation */

/* package optparse-applicative-0.15.1.0 */
#ifndef VERSION_optparse_applicative
#define VERSION_optparse_applicative "0.15.1.0"
#endif /* VERSION_optparse_applicative */
#ifndef MIN_VERSION_optparse_applicative
#define MIN_VERSION_optparse_applicative(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  15 || \
  (major1) == 0 && (major2) == 15 && (minor) <= 1)
#endif /* MIN_VERSION_optparse_applicative */

/* package parsec-3.1.14.0 */
#ifndef VERSION_parsec
#define VERSION_parsec "3.1.14.0"
#endif /* VERSION_parsec */
#ifndef MIN_VERSION_parsec
#define MIN_VERSION_parsec(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  1 || \
  (major1) == 3 && (major2) == 1 && (minor) <= 14)
#endif /* MIN_VERSION_parsec */

/* package positive-0.4.1 */
#ifndef VERSION_positive
#define VERSION_positive "0.4.1"
#endif /* VERSION_positive */
#ifndef MIN_VERSION_positive
#define MIN_VERSION_positive(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_VERSION_positive */

/* package prettify-1.0 */
#ifndef VERSION_prettify
#define VERSION_prettify "1.0"
#endif /* VERSION_prettify */
#ifndef MIN_VERSION_prettify
#define MIN_VERSION_prettify(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_prettify */

/* package process-1.6.8.0 */
#ifndef VERSION_process
#define VERSION_process "1.6.8.0"
#endif /* VERSION_process */
#ifndef MIN_VERSION_process
#define MIN_VERSION_process(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  6 || \
  (major1) == 1 && (major2) == 6 && (minor) <= 8)
#endif /* MIN_VERSION_process */

/* package random-1.1 */
#ifndef VERSION_random
#define VERSION_random "1.1"
#endif /* VERSION_random */
#ifndef MIN_VERSION_random
#define MIN_VERSION_random(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_random */

/* package random-shuffle-0.0.4 */
#ifndef VERSION_random_shuffle
#define VERSION_random_shuffle "0.0.4"
#endif /* VERSION_random_shuffle */
#ifndef MIN_VERSION_random_shuffle
#define MIN_VERSION_random_shuffle(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 4)
#endif /* MIN_VERSION_random_shuffle */

/* package roman-numerals-0.5.1.5 */
#ifndef VERSION_roman_numerals
#define VERSION_roman_numerals "0.5.1.5"
#endif /* VERSION_roman_numerals */
#ifndef MIN_VERSION_roman_numerals
#define MIN_VERSION_roman_numerals(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 1)
#endif /* MIN_VERSION_roman_numerals */

/* package semigroups-0.19.1 */
#ifndef VERSION_semigroups
#define VERSION_semigroups "0.19.1"
#endif /* VERSION_semigroups */
#ifndef MIN_VERSION_semigroups
#define MIN_VERSION_semigroups(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  19 || \
  (major1) == 0 && (major2) == 19 && (minor) <= 1)
#endif /* MIN_VERSION_semigroups */

/* package split-0.2.3.4 */
#ifndef VERSION_split
#define VERSION_split "0.2.3.4"
#endif /* VERSION_split */
#ifndef MIN_VERSION_split
#define MIN_VERSION_split(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_split */

/* package streams-3.3 */
#ifndef VERSION_streams
#define VERSION_streams "3.3"
#endif /* VERSION_streams */
#ifndef MIN_VERSION_streams
#define MIN_VERSION_streams(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  3 || \
  (major1) == 3 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_streams */

/* package text-1.2.4.0 */
#ifndef VERSION_text
#define VERSION_text "1.2.4.0"
#endif /* VERSION_text */
#ifndef MIN_VERSION_text
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 4)
#endif /* MIN_VERSION_text */

/* package transformers-0.5.6.2 */
#ifndef VERSION_transformers
#define VERSION_transformers "0.5.6.2"
#endif /* VERSION_transformers */
#ifndef MIN_VERSION_transformers
#define MIN_VERSION_transformers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 6)
#endif /* MIN_VERSION_transformers */

/* package type-unary-0.3.2 */
#ifndef VERSION_type_unary
#define VERSION_type_unary "0.3.2"
#endif /* VERSION_type_unary */
#ifndef MIN_VERSION_type_unary
#define MIN_VERSION_type_unary(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 2)
#endif /* MIN_VERSION_type_unary */

/* package unix-2.7.2.2 */
#ifndef VERSION_unix
#define VERSION_unix "2.7.2.2"
#endif /* VERSION_unix */
#ifndef MIN_VERSION_unix
#define MIN_VERSION_unix(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  7 || \
  (major1) == 2 && (major2) == 7 && (minor) <= 2)
#endif /* MIN_VERSION_unix */

/* package unordered-containers-0.2.10.0 */
#ifndef VERSION_unordered_containers
#define VERSION_unordered_containers "0.2.10.0"
#endif /* VERSION_unordered_containers */
#ifndef MIN_VERSION_unordered_containers
#define MIN_VERSION_unordered_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 10)
#endif /* MIN_VERSION_unordered_containers */

/* package vector-space-0.16 */
#ifndef VERSION_vector_space
#define VERSION_vector_space "0.16"
#endif /* VERSION_vector_space */
#ifndef MIN_VERSION_vector_space
#define MIN_VERSION_vector_space(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  16 || \
  (major1) == 0 && (major2) == 16 && (minor) <= 0)
#endif /* MIN_VERSION_vector_space */

/* package xml-1.3.14 */
#ifndef VERSION_xml
#define VERSION_xml "1.3.14"
#endif /* VERSION_xml */
#ifndef MIN_VERSION_xml
#define MIN_VERSION_xml(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 14)
#endif /* MIN_VERSION_xml */

/* tool gcc-9.3.0 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "9.3.0"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  3 || \
  (major1) == 9 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_gcc */

/* tool ghc-8.8.3 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "8.8.3"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  8 || \
  (major1) == 8 && (major2) == 8 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_ghc */

/* tool ghc-pkg-8.8.3 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "8.8.3"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  8 || \
  (major1) == 8 && (major2) == 8 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_ghc_pkg */

/* tool haddock-2.23.0 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.23.0"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  23 || \
  (major1) == 2 && (major2) == 23 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_haddock */

/* tool hpc-0.67 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.67"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  67 || \
  (major1) == 0 && (major2) == 67 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */

/* tool hsc2hs-0.68.5 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.5"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 5)
#endif /* MIN_TOOL_VERSION_hsc2hs */

/* tool runghc-8.8.3 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "8.8.3"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  8 || \
  (major1) == 8 && (major2) == 8 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_runghc */

/* tool strip-2.31 */
#ifndef TOOL_VERSION_strip
#define TOOL_VERSION_strip "2.31"
#endif /* TOOL_VERSION_strip */
#ifndef MIN_TOOL_VERSION_strip
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  31 || \
  (major1) == 2 && (major2) == 31 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_strip */

#ifndef CURRENT_PACKAGE_KEY
#define CURRENT_PACKAGE_KEY "music-suite-2.0.0-inplace"
#endif /* CURRENT_PACKAGE_KEY */
#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "music-suite-2.0.0-inplace"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "2.0.0"
#endif /* CURRENT_PACKAGE_VERSION */
